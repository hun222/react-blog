	1. 왜 node.js 사용하는가?
	- create-react-app 사용하기위해
	- Nodejs 설치하면 npm(nodejs 설치한 pc에서 쉽게 라이브러리 설치하기 위해) 설치한 툴 사용가능
	2. Public: 동적으로 변하지 않는 static 파일 보관함 -> 배포 빌드시 압축 안된다.
	3. React 장점?
	- Data binding이 쉽다. (중괄호)


★ State?
	- 데이터 저장? 변수 vs state
	- 데이터를 변수 말고 저장할 수 있는 방법
	- useState()를 이용해 만들어야함.
	- 문자, 숫자, array, object 모두 저장가능
	- 장점: 웹이 App처럼 동작하게 만들기위해 (새로고침 없이 자동으로 html 재랜더링된다.)
	- 변경이 필요한 중요한 데이터는 변수말고 state로 데이터 바인딩해서 사용한다.
	- State는 그냥 변경하지말고 setState를 통해서 변경한다.

Object나 Array state 변경방법
	- Deep copy로 수정
	- let arr = [1,2,3]
let arr2 = arr // 복사가 아니라 값 공유, reference data type
	- let arr2 = [...arr] // … is ES6 "spread operator"
	- Spread Operator는 중괄호, 대괄호 다 제거해준다.
React 개발방식
	- State data는 immutable data 직접 수정하면 안된다!!!

Component 만드는 규칙
	1. 이름은 대문자로 시작한다.
	2. return 소괄호 내 HTML 태그는 하나의 루트 태그 안에 들어가야한다.
	3. div가 싫으면 <> </> // fragment 문법이라고함

React 장점
	1. Component써서 HTML을 덩어리째 관리 => 관리의 용이성

뭘 Component로 만들까?
	- 반복되는 HTML 덩어리들
	- 자주 변경되는 HTML UI들 -> 그것만 렌더링되면 되니까 성능상 이점이 있다.
	- 다른 페이지를 만들때
	
Component 단점?
	- state 쓸때 복잡해짐
	- 변수는 function안에 살고 function안에서 죽는다.
	
★ React에선 UI 만들때 데이터를 이용한다. (State)

★ 반복문 사용해보자
jsx 표현식에 map, for 사용해서 html 태그 생성

부모에서 자식에게 state 전송가능하다.
방법은 props 사용.
